// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mock

import (
	"context"
	"github.com/ONSdigital/dp-api-clients-go/v2/dataset"
	"github.com/ONSdigital/dp-healthcheck/healthcheck"
	"github.com/ONSdigital/dp-population-types-api/service"
	"sync"
)

// Ensure, that DatasetAPIClientMock does implement service.DatasetAPIClient.
// If this is not the case, regenerate this file with moq.
var _ service.DatasetAPIClient = &DatasetAPIClientMock{}

// DatasetAPIClientMock is a mock implementation of service.DatasetAPIClient.
//
//	func TestSomethingThatUsesDatasetAPIClient(t *testing.T) {
//
//		// make and configure a mocked service.DatasetAPIClient
//		mockedDatasetAPIClient := &DatasetAPIClientMock{
//			CheckerFunc: func(ctx context.Context, state *healthcheck.CheckState) error {
//				panic("mock out the Checker method")
//			},
//			GetDatasetsFunc: func(ctx context.Context, uToken string, svcToken string, collectionID string, params *dataset.QueryParams) (dataset.List, error) {
//				panic("mock out the GetDatasets method")
//			},
//		}
//
//		// use mockedDatasetAPIClient in code that requires service.DatasetAPIClient
//		// and then make assertions.
//
//	}
type DatasetAPIClientMock struct {
	// CheckerFunc mocks the Checker method.
	CheckerFunc func(ctx context.Context, state *healthcheck.CheckState) error

	// GetDatasetsFunc mocks the GetDatasets method.
	GetDatasetsFunc func(ctx context.Context, uToken string, svcToken string, collectionID string, params *dataset.QueryParams) (dataset.List, error)

	// calls tracks calls to the methods.
	calls struct {
		// Checker holds details about calls to the Checker method.
		Checker []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// State is the state argument value.
			State *healthcheck.CheckState
		}
		// GetDatasets holds details about calls to the GetDatasets method.
		GetDatasets []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// UToken is the uToken argument value.
			UToken string
			// SvcToken is the svcToken argument value.
			SvcToken string
			// CollectionID is the collectionID argument value.
			CollectionID string
			// Params is the params argument value.
			Params *dataset.QueryParams
		}
	}
	lockChecker     sync.RWMutex
	lockGetDatasets sync.RWMutex
}

// Checker calls CheckerFunc.
func (mock *DatasetAPIClientMock) Checker(ctx context.Context, state *healthcheck.CheckState) error {
	if mock.CheckerFunc == nil {
		panic("DatasetAPIClientMock.CheckerFunc: method is nil but DatasetAPIClient.Checker was just called")
	}
	callInfo := struct {
		Ctx   context.Context
		State *healthcheck.CheckState
	}{
		Ctx:   ctx,
		State: state,
	}
	mock.lockChecker.Lock()
	mock.calls.Checker = append(mock.calls.Checker, callInfo)
	mock.lockChecker.Unlock()
	return mock.CheckerFunc(ctx, state)
}

// CheckerCalls gets all the calls that were made to Checker.
// Check the length with:
//
//	len(mockedDatasetAPIClient.CheckerCalls())
func (mock *DatasetAPIClientMock) CheckerCalls() []struct {
	Ctx   context.Context
	State *healthcheck.CheckState
} {
	var calls []struct {
		Ctx   context.Context
		State *healthcheck.CheckState
	}
	mock.lockChecker.RLock()
	calls = mock.calls.Checker
	mock.lockChecker.RUnlock()
	return calls
}

// GetDatasets calls GetDatasetsFunc.
func (mock *DatasetAPIClientMock) GetDatasets(ctx context.Context, uToken string, svcToken string, collectionID string, params *dataset.QueryParams) (dataset.List, error) {
	if mock.GetDatasetsFunc == nil {
		panic("DatasetAPIClientMock.GetDatasetsFunc: method is nil but DatasetAPIClient.GetDatasets was just called")
	}
	callInfo := struct {
		Ctx          context.Context
		UToken       string
		SvcToken     string
		CollectionID string
		Params       *dataset.QueryParams
	}{
		Ctx:          ctx,
		UToken:       uToken,
		SvcToken:     svcToken,
		CollectionID: collectionID,
		Params:       params,
	}
	mock.lockGetDatasets.Lock()
	mock.calls.GetDatasets = append(mock.calls.GetDatasets, callInfo)
	mock.lockGetDatasets.Unlock()
	return mock.GetDatasetsFunc(ctx, uToken, svcToken, collectionID, params)
}

// GetDatasetsCalls gets all the calls that were made to GetDatasets.
// Check the length with:
//
//	len(mockedDatasetAPIClient.GetDatasetsCalls())
func (mock *DatasetAPIClientMock) GetDatasetsCalls() []struct {
	Ctx          context.Context
	UToken       string
	SvcToken     string
	CollectionID string
	Params       *dataset.QueryParams
} {
	var calls []struct {
		Ctx          context.Context
		UToken       string
		SvcToken     string
		CollectionID string
		Params       *dataset.QueryParams
	}
	mock.lockGetDatasets.RLock()
	calls = mock.calls.GetDatasets
	mock.lockGetDatasets.RUnlock()
	return calls
}
