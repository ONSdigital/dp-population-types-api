swagger: "2.0"
info:
  title: "dp-population-types-api"
  description: "Exposes representation of the population types resources which support selection of datasets exposed elsewhere"
  version: 1.0.0
  license:
    name: "Open Government Licence v3.0"
    url: "http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
basePath: "/v1"
schemes:
  - http
parameters:
  page_limit:
    name: limit
    description: >-
      Limit the number of items that will be returned. Defaults to 20 and capped
      at 500
    in: query
    required: false
    type: integer
    default: 20
    minimum: 0
    maximum: 500
  offset:
    name: offset
    description: >-
      Starting index of the items array that will be returned. By default it is
      zero, meaning that the returned items will start from the beginning.
    in: query
    required: false
    type: integer
    default: 0
    minimum: 0
  areas:
    name: areas
    required: true
    description: "A list of parent area codes, separated by commas"
    in: query
    type: string
tags:
  - name: "Public"
  - name: "Private"
securityDefinitions:
  InternalAPIKey:
    name: internal-token
    description: "API key for internal service calls"
    in: header
    type: apiKey
paths:
  /population-types:
    get:
      parameters:
      - $ref: '#/parameters/page_limit'
      - $ref: '#/parameters/offset'
      tags:
        - "Public"
        - "Private"
      summary: "Get all population types relevant to Census"
      description: "Retrieves a list of cantabular population types for Census"
      security:
        - InternalAPIKey: []
      responses:
        200:
          description: "Json object containing a list of population types for Census"
          schema:
            $ref: "#/definitions/GetPopulationTypesResponse"
        401:
          description: "Unauthorised to fetch"
        500:
          $ref: "#/responses/InternalError"
  /population-types/{population-type}/area-types:
    get:
      summary: "Get list of area types for given dataset "
      description: ""
      produces:
        - "application/json"
      parameters:
        - $ref: '#/parameters/page_limit'
        - $ref: '#/parameters/offset'
        - name: population-type
          type: string
          in: path
          required: true
      responses:
        200:
          description: "area types returned successfully"
          schema:
            $ref: '#/definitions/GetAreaTypesResponse'
        401:
          $ref: '#/responses/Unauthorised'
        404:
          description: "Dataset not found"
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          $ref: "#/responses/InternalError"
        502:
          $ref: '#/responses/BadGateway'
  /population-types/{population-type}/dimensions:
    get:
      summary: "Get list of non-geography base variables for given dataset "
      description: ""
      produces:
        - "application/json"
      parameters:
        - name: population-type
          type: string
          in: path
          required: true
      responses:
        200:
          description: "A json list containing non-geography base variables for a dataset"
          schema:
            $ref: '#/definitions/Dimension'
        401:
          $ref: '#/responses/Unauthorised'
        404:
          description: "Dataset not found"
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          $ref: "#/responses/InternalError"
        502:
          $ref: '#/responses/BadGateway'
  /population-types/{population-type}/dimensions/{dimension}/categorisations:
    get:
      summary: "Get list of categorisations for a base level variable"
      description: ""
      produces:
        - "application/json"
      parameters:
        - name: population-type
          type: string
          in: path
          required: true
        - name: dimension
          type: string
          in: path
          required: true
      responses:
        200:
          description: "A json list containing categorisations for a base variable"
          schema:
            $ref: '#/definitions/Dimension'
        401:
          $ref: '#/responses/Unauthorised'
        404:
          description: "Dataset not found"
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          $ref: "#/responses/InternalError"
        502:
          $ref: '#/responses/BadGateway'
  /population-types/{population-type}/dimensions/{dimension}/base:
    get:
      summary: "Get the base variable for a categorisation"
      description: ""
      produces:
        - "application/json"
      parameters:
        - name: population-type
          type: string
          in: path
          required: true
        - name: dimension
          type: string
          in: path
          required: true
      responses:
        200:
          description: "The base variable information"
          schema:
            $ref: '#/definitions/Base'
        401:
          $ref: '#/responses/Unauthorised'
        404:
          description: "Dataset not found"
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          $ref: "#/responses/InternalError"
        502:
          $ref: '#/responses/BadGateway'
  /population-types/{population-type}/dimensions/{dimension}/parents:
    get:
      summary: "Get the parent variables of a categorisation"
      description: ""
      produces:
        - "application/json"
      parameters:
        - name: population-type
          type: string
          in: path
          required: true
        - name: dimension
          type: string
          in: path
          required: true
      responses:
        200:
          description: "The parent variables for a categorisation"
          schema:
            $ref: '#/definitions/Dimension'
        401:
          $ref: '#/responses/Unauthorised'
        404:
          description: "Dataset not found"
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          $ref: "#/responses/InternalError"
        502:
          $ref: '#/responses/BadGateway'
  /population-types/{population-type}/area-types/{area-type}/areas:
    get:
      parameters:
        - name: population-type
          type: string
          in: path
          required: true
        - name: area-type
          type: string
          in: path
          required: true
        - $ref: '#/parameters/page_limit'
        - $ref: '#/parameters/offset'
      summary: "Get categories/values for given area type"
      description: ""
      produces:
        - "application/json"
      responses:
        200:
          description: "Categories for area type returned"
          schema:
            $ref: '#/definitions/GetAreaResponse'
        401:
          $ref: '#/responses/Unauthorised'
        404:
          description: "Dataset not found"
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          $ref: "#/responses/InternalError"
        502:
          $ref: '#/responses/BadGateway'
  /population-types/{population-type}/area-types/{area-type}/areas/{area-id}:
    get:
      parameters:
        - name: population-type
          type: string
          in: path
          required: true
        - name: area-type
          type: string
          in: path
          required: true
        - name: area-id
          type: string
          in: path
          required: true
        - $ref: '#/parameters/page_limit'
        - $ref: '#/parameters/offset'
      summary: "Get details for a specific area"
      description: ""
      produces:
        - "application/json"
      responses:
        200:
          description: "Information for area returned"
          schema:
            $ref: '#/definitions/Area'
        401:
          $ref: '#/responses/Unauthorised'
        404:
          description: "Area not found"
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          $ref: "#/responses/InternalError"
        502:
          $ref: '#/responses/BadGateway'
  /population-types/{population-type}/area-types/{area-type}/parents:
    get:
      summary: "Get list of parents for given area type"
      description: ""
      produces:
        - "application/json"
      parameters:
        - name: population-type
          type: string
          in: path
          required: true
        - name: area-type
          type: string
          in: path
          required: true
        - $ref: '#/parameters/page_limit'
        - $ref: '#/parameters/offset'
      responses:
        200:
          description: "parent area types returned successfully"
          schema:
            $ref: '#/definitions/GetAreaTypesResponse'
  /population-types/{population-type}/area-types/{area-type}/parents/{parent-area-type}/areas-count:
    get:
      tags:
        - "Private"
      summary: "Get a count of the areas within the selected parent areas"
      description: ""
      produces:
        - "application/json"
      parameters:
        - name: population-type
          type: string
          in: path
          required: true
        - name: area-type
          type: string
          in: path
          required: true
        - name: parent-area-type
          type: string
          in: path
          required: true
        - $ref: '#/parameters/areas'
      responses:
        200:
          description: "Count returned successfully"
          schema:
            type: integer
  /health:
    get:
      tags:
        - "Private"
      summary: "Returns API's health status"
      description: "Returns health status of the API and checks on dependent services"
      produces:
        - application/json
      responses:
        200:
          description: "Successfully returns OK status with checks of dependent services"
          schema:
            $ref: "#/definitions/Health"
        429:
          description: "Services warming up or degraded (at least one check in WARNING or CRITICAL status)"
        500:
          $ref: "#/responses/InternalError"

responses:
  BadGateway:
    description: "Failed to process the request due to an error in a downstream server"
  InternalError:
    description: "Failed to process the request due to an internal error"
  Unauthorised:
    description: "The token provided is unauthorised to carry out this operation"



definitions:
  ErrorResponse:
    description: "The response body containing an error message"
    properties:
      errors:
        type: array
        items:
          type: string
  Health:
    type: object
    properties:
      status:
        type: string
        description: "The status of the API"
        enum: ["OK", "WARNING", "CRITICAL"]
      version:
        type: object
        properties:
          build_time:
            type: string
            description: "The build date and time of the API"
            example: "2020-06-11T12:49:20+01:00"
          git_commit:
            type: string
            description: "The git commit hash of the API"
            example: "7c2febbf2b818175112478d4ffbadbee1b654f63"
          language:
            type: string
            description: "The programming language used to implement API"
            example: "go"
          language_version:
            type: string
            description: "The version of the programming language used to implement API"
            example: "go1.14.3"
          version:
            type: string
            description: "The version of API"
            example: "1.0.0"
      uptime:
        type: string
        description: "The uptime of API"
        example: "34516"
      start_time:
        type: string
        description: "The start date and time of API running"
        example: "2020-06-11T11:49:21.520922Z"
      checks:
        type: array
        items:
          $ref: "#/definitions/HealthChecker"
  HealthChecker:
    type: object
    properties:
      name:
        type: string
        description: "The name of external service used by API"
        enum: ["mongodb"]
      status:
        type: string
        description: "The status of the external service"
        enum: ["OK", "WARNING", "CRITICAL"]
      message:
        type: string
        description: "The message status of the external service"
        example: "mongodb is OK"
      last_checked:
        type: string
        description: "The last health check date and time of the external service"
        example: "2020-06-11T11:49:50.330089Z"
      last_success:
        type: string
        description: "The last successful health check date and time of the external service"
        example: "2020-06-11T11:49:50.330089Z"
      last_failure:
        type: string
        description: "The last failed health check date and time of the external service"
        example: "2019-09-22T11:48:51.0000001Z"
  PopulationType:
    description: "A population type which census data can be retrieved from"
    type: object
    properties:
      name:
        description: "The name of the population type"
        type: string
        example: "Usual-Residents"
  GetAreaTypesResponse:
    description: "The response body containing all available area-types for a given population-type"
    properties:
      count:
        description: "The number of area-types returned"
        readOnly: true
        type: integer
      items:
        description: "An array of area-types"
        type: array
        items:
          $ref: '#/definitions/AreaType'
      limit:
        description: "The number of area-types requested"
        type: integer
      offset:
        description: "The first row of area-types for to retrieve, starting at 0. Use this parameter as a pagination mechanism along with the limit parameter"
        type: integer
      total_count:
        description: "The total number of area-types"
        readOnly: true
        type: integer
  GetPopulationTypesResponse:
    description: "The response body containing all available population-types for Census 2021"
    properties:
      count:
        description: "The number of population-types"
        readOnly: true
        type: integer
      items:
        description: "An array of population-types"
        type: array
        items:
          $ref: '#/definitions/PopulationType'
      limit:
        description: "The number of population-type requested"
        type: integer
      offset:
        description: "The first row of population-types to retrieve, starting at 0. Use this parameter as a pagination mechanism along with the limit parameter"
        type: integer
      total_count:
        description: "The total number of population-types"
        readOnly: true
        type: integer
  GetAreaTypeResponse:
    description: "The response body containing all available area-types for a given dataset"
    properties:
      area-type:
        allOf:
          - $ref: '#/definitions/AreaType'
          - example:
              id: "electoral_wards"
              label: "Electoral Wards or Divisions"
  AreaType:
    properties:
      id:
        type: string
        example: "NATCD"
      label:
        type: string
        example: "National code"
      description:
        type: string
        example: "National code definition for Census 2021"
      total_count:
        type: integer
        example: "2"
  GetAreaResponse:
    description: "The response body containing the information for an area"
    properties:
      count:
        description: "The number of areas"
        readOnly: true
        type: integer
      items:
        description: "An array of areas"
        type: array
        items:
          $ref: '#/definitions/Area'
      limit:
        description: "The number of areas requested"
        type: integer
      offset:
        description: "The first row of areas to retrieve, starting at 0. Use this parameter as a pagination mechanism along with the limit parameter"
        type: integer
      total_count:
        description: "The total number of areas"
        readOnly: true
        type: integer
  Area:
    properties:
      id:
        type: string
        example: "E06000001"
      label:
        type: string
        example: "Hartlepool"
      area-type:
        type: string
        example: "LADCD"
  Dimension:
    description: "A list of dimensions"
    type: object
    properties:
      count:
        description: "The number of dimensions returned"
        readOnly: true
        type: integer
      items:
        type: array
        items:
          $ref: '#/definitions/DimensionResponse'
      limit:
        description: "The number of dimensions requested"
        type: integer
      offset:
        description: "The first row of dimensions to retrieve, starting at 0. Use this parameter as a pagination mechanism along with the limit parameter"
        type: integer
      total_count:
        description: "The total number of dimensions"
        readOnly: true
        type: integer
  DimensionResponse:
    description: "The response body containing the information for a dimension"
    properties:
      dimension:
         properties:
          id:
            type: string
          label:
            type: string
          total_count:
            type: integer
  Base:
    description: "The response body containing the information for a base variable"
    properties:
      name:
        type: string
      label:
        type: string
    
            

